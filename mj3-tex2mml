#! /usr/bin/env node

/*************************************************************************
 *
 *  mj3-tex2mml
 *
 *  Uses MathJax v3 to convert a TeX string to a MathML string.
 *
 * ----------------------------------------------------------------------
 *
 *  Copyright (c) 2018 The MathJax Consortium
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

//
//  Get the command-line arguments
//
var argv = require('yargs')
  .demand(0).strict()
  .usage('$0 [options] "math" > file.html')
  .options({
    inline: {
      boolean: true,
      describe: "process as display math"
    },
    packages: {
      default: 'base, ams, noundefined, newcommand, boldsymbol, braket, mhchem, physics, verb, cancel, enclose',
      describe: 'the packages to use, e.g. "base, ams"'
    }
  })
  .argv;

//
//  Load the packages needed for MathJax
//
const TeX = require('mathjax3/mathjax3/input/tex.js').TeX;
const AbstractMathItem = require('mathjax3/mathjax3/core/MathItem.js').AbstractMathItem;
const LiteDocument = require('mathjax3/mathjax3/adaptors/lite/Document.js').LiteDocument;

require('mathjax3/mathjax3/input/tex/base/BaseConfiguration.js');
require('mathjax3/mathjax3/input/tex/ams/AmsConfiguration.js');
require('mathjax3/mathjax3/input/tex/noundefined/NoUndefinedConfiguration.js');
require('mathjax3/mathjax3/input/tex/newcommand/NewcommandConfiguration.js');
require('mathjax3/mathjax3/input/tex/boldsymbol/BoldsymbolConfiguration.js');
require('mathjax3/mathjax3/input/tex/braket/BraketConfiguration.js');
require('mathjax3/mathjax3/input/tex/mhchem/MhchemConfiguration.js');
require('mathjax3/mathjax3/input/tex/physics/PhysicsConfiguration.js');
require('mathjax3/mathjax3/input/tex/verb/VerbConfiguration.js');
require('mathjax3/mathjax3/input/tex/cancel/CancelConfiguration.js');
require('mathjax3/mathjax3/input/tex/enclose/EncloseConfiguration.js');

const MmlVisitor = require('mathjax3/mathjax3/core/MmlTree/SerializedMmlVisitor.js').SerializedMmlVisitor;

//
//  A generic math item
//
class GenericMathItem extends AbstractMathItem {};

//
//  Create the input jax and document
//
const tex = new TeX({packages: argv.packages.split(/\s*,\s*/)});
const document = new LiteDocument();

//
//  Create a MathML serializer
//
const visitor = new MmlVisitor();
const toMathML = (node => visitor.visitTree(node, document));

//
//  Typeset a TeX string and return the serialized MathML
//
const Typeset = (string, display) => {
    const math = new GenericMathItem(string, tex, display);
    math.compile();
    return toMathML(math.root);
};

//
//  Convert the math provided by the user
//
console.log(Typeset(argv._[0] || '', !argv.inline));

