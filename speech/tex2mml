#! /usr/bin/env -S node -r esm

/*************************************************************************
 *
 *  speech/tex2mml
 *
 *  Uses MathJax v3 to convert a TeX string to a MathML string with speech.
 *
 * ----------------------------------------------------------------------
 *
 *  Copyright (c) 2019 The MathJax Consortium
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */


//
//  The default TeX packages to use
//
const PACKAGES = 'base, autoload, require, ams, newcommand';

//
//  Get the command-line arguments
//
var argv = require('yargs')
    .demand(0).strict()
    .usage('$0 [options] "math" > file.html')
    .options({
        inline: {
            boolean: true,
            describe: "process as inline math"
        },
        packages: {
            default: PACKAGES,
            describe: 'the packages to use, e.g. "base, ams"; use "*" to represent the default packages, e.g, "*, bbox"'
        },
        speech: {
            default: 'shallow',
            describe: 'level of speech: deep, shallow, none'
        },
        dist: {
            boolean: true,
            default: false,
            describe: 'true to use webpacked version, false to use mathjax3 source files'
        }
    })
    .argv;

//
//  Configure MathJax
//
MathJax = {
    loader: {
        paths: {mathjax: 'mathjax-full/es5', sre: 'mathjax-full/js/a11y/sre-node'},
        source: (argv.dist ? {} : require('mathjax-full/components/src/source.js').source),
        require: require,
        load: ['input/tex-full', 'adaptors/liteDOM', 'a11y/semantic-enrich']
    },
    tex: {packages: argv.packages.replace('\*', PACKAGES).split(/\s*,\s*/)},
    options: {
        enrichSpeech: argv.speech,
        renderActions: require('./action.js').speechAction
    },
    startup: {
        typeset: false,
        ready: () => {
            MathJax.startup.defaultReady();
            const adaptor = MathJax.startup.adaptor;
            MathJax.tex2mmlPromise(argv._[0] || '', {display: !argv.inline})
                .then(mml => console.log(mml))
                .catch(err => console.log(err));
        }
    }
}

//
//  Load the MathJax startup module
//
require('mathjax-full/' + (argv.dist ? 'es5' : 'components/src/startup') + '/startup.js');

